import React, {useState} from 'react'
import cl from './PageWrapper.module.css';
import { ArrowRightCircleIcon, Bars3BottomLeftIcon } from '@heroicons/react/24/solid';
import Header from '../header/Header';
import { useDispatch, useSelector } from 'react-redux';
import Link from 'next/link';
import { isTypeNode } from 'typescript';
import { createKey } from 'next/dist/shared/lib/router/router';
export default function PageWrapper({children}) {
    const state = useSelector(state=>state.sidebar)
    const isHiddenSidebar = useSelector(state=>state.hiddenSidebar.isHidden)
    const dispatch = useDispatch();
    const handleFuncItem = (e, id)=>{
        dispatch({type:'ACTIVE_ITEM_SIDEBAR', info: {id:id}})
    }
    return (
    <div className={cl.block}>
        <div className={isHiddenSidebar ? [cl.sidebar, cl.sidebarHidden].join` ` :cl.sidebar}>
            <div className={cl.logoBlock}>
                <span className={cl.logo}>
                    <svg width="139" height="60" viewBox="0 0 139 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clip-path="url(#clip0_24_2)">
                    <path d="M52.3768 29.5588C52.3768 40.0522 36.0575 48 25.3491 48C14.6405 48 10.0724 40.0522 10.0724 29.5588C10.0724 19.0654 24.629 10 35.3375 10C46.0461 10 52.3768 19.0654 52.3768 29.5588Z" fill="#48CAE4"/>
                    <path d="M31.0794 18.6979C31.9989 16.2326 32.4586 15 33.2492 15C34.0398 15 34.4995 16.2326 35.419 18.6979L35.4617 18.8127C35.9813 20.2054 36.2409 20.9018 36.7703 21.325C37.2996 21.7483 37.9945 21.8152 39.3843 21.9491L39.6354 21.9733C41.9099 22.1924 43.0473 22.3019 43.2905 23.08C43.5339 23.8582 42.6894 24.6846 41.0002 26.3373L40.4365 26.8889C39.5815 27.7255 39.1539 28.1439 38.9545 28.6921C38.9174 28.7945 38.8866 28.8992 38.8622 29.0058C38.7311 29.5774 38.8563 30.1842 39.1067 31.398L39.1846 31.7758C39.6448 34.0064 39.8749 35.1216 39.4733 35.6027C39.323 35.7825 39.128 35.9119 38.9112 35.9755C38.3313 36.1457 37.5077 35.4241 35.8608 33.9808C34.7793 33.033 34.2386 32.5592 33.6179 32.4526C33.3736 32.4106 33.1248 32.4106 32.8805 32.4526C32.2598 32.5592 31.719 33.033 30.6376 33.9808C28.9907 35.4241 28.1672 36.1457 27.5872 35.9755C27.3705 35.9119 27.1754 35.7825 27.0252 35.6027C26.6235 35.1216 26.8536 34.0064 27.3138 31.7758L27.3917 31.398C27.6421 30.1842 27.7673 29.5774 27.6363 29.0058C27.6118 28.8992 27.5809 28.7945 27.5438 28.6921C27.3445 28.1439 26.917 27.7255 26.0619 26.8889L25.4982 26.3373C23.8091 24.6846 22.9645 23.8582 23.2079 23.08C23.4512 22.3019 24.5884 22.1924 26.863 21.9733L27.1142 21.9491C28.5039 21.8152 29.1988 21.7483 29.7281 21.325C30.2575 20.9018 30.5171 20.2054 31.0366 18.8127L31.0794 18.6979Z" stroke="white" stroke-width="2.67"/>
                    <path d="M45.3261 25H32.2319V38H45.3261V25Z" fill="#48CAE4"/>
                    <path d="M34.2464 32H23.1667V44H34.2464V32Z" fill="#48CAE4"/>
                    <path d="M44.1461 24.9395L42.2436 23.0175L40.5526 24.6673L42.4551 26.5893L44.1461 24.9395Z" fill="white"/>
                    <path d="M26.5201 28.9151L28.5073 30.888L27.0828 32.3022L25.0956 30.3293L26.5201 28.9151Z" fill="white"/>
                    <path d="M33.5405 30.7637L30.9908 28.2324L21.7011 37.4553L24.2508 39.9866L33.5405 30.7637Z" fill="#48CAE4"/>
                    <path d="M39.9666 34.0466C40.4917 33.5252 40.4917 32.6799 39.9666 32.1586C39.4415 31.6372 38.5901 31.6372 38.065 32.1586L34.0592 36.1355C33.5341 36.6568 33.5341 37.5021 34.0592 38.0235C34.5843 38.5448 35.4358 38.5448 35.9609 38.0235L39.9666 34.0466Z" fill="white"/>
                    <path d="M27.3836 31.832C27.9087 31.3106 27.9087 30.4653 27.3836 29.944C26.8585 29.4226 26.0071 29.4226 25.4819 29.944L21.322 34.074C20.7969 34.5954 20.7969 35.4406 21.322 35.962C21.8471 36.4833 22.6985 36.4833 23.2236 35.962L27.3836 31.832Z" fill="white"/>
                    <path d="M43.2271 25.8253C43.7581 25.2981 43.7581 24.4433 43.2271 23.9161C42.696 23.3889 41.8351 23.3889 41.3041 23.9161L26.1427 38.9684C25.6116 39.4956 25.6116 40.3504 26.1427 40.8776C26.6737 41.4048 27.5347 41.4048 28.0657 40.8776L43.2271 25.8253Z" fill="white"/>
                    <path d="M29.8876 34.0531C30.4127 33.5317 30.4127 32.6864 29.8876 32.1651C29.3625 31.6437 28.5111 31.6437 27.9859 32.1651L19.6919 40.3995C19.1667 40.9208 19.1667 41.7661 19.6919 42.2875C20.217 42.8088 21.0684 42.8088 21.5935 42.2875L29.8876 34.0531Z" fill="white"/>
                    <path className={cl.path} d="M67.3867 40C65.7192 40 64.2478 39.6412 62.9727 38.9238C61.7171 38.2064 60.7362 37.2224 60.0299 35.9719C59.3434 34.7214 59 33.2866 59 31.6671C59 30.0476 59.3335 28.6128 60.0005 27.3623C60.6871 26.1118 61.619 25.1382 62.7961 24.4412C63.9928 23.7237 65.3366 23.365 66.8276 23.365C68.3382 23.365 69.6723 23.7134 70.8297 24.4104C71.9871 25.1074 72.8896 26.0914 73.537 27.3623C74.2041 28.6128 74.5375 30.0784 74.5375 31.7594C74.5375 31.8824 74.5278 32.0259 74.5081 32.1898C74.5081 32.3538 74.4983 32.5075 74.4787 32.6511H61.207V30.5294H73.0073L71.8597 31.2674C71.8793 30.2219 71.6733 29.2893 71.2417 28.4692C70.81 27.6492 70.2117 27.0139 69.4466 26.5628C68.7012 26.0914 67.8281 25.8556 66.8276 25.8556C65.8467 25.8556 64.9737 26.0914 64.2086 26.5628C63.4435 27.0139 62.8452 27.6596 62.4135 28.5C61.9819 29.32 61.7662 30.2629 61.7662 31.3289V31.8209C61.7662 32.9073 62.0016 33.881 62.4724 34.742C62.9629 35.5824 63.6397 36.2385 64.5029 36.7099C65.366 37.1813 66.3568 37.4171 67.475 37.4171C68.397 37.4171 69.2309 37.2532 69.9763 36.9251C70.7414 36.5971 71.4085 36.1051 71.9774 35.4492L73.537 37.3556C72.8308 38.2166 71.9479 38.8725 70.8886 39.3235C69.8488 39.7745 68.6815 40 67.3867 40ZM78.4603 39.8155V17H81.2853V39.8155H78.4603ZM91.1521 40C89.8573 40 88.6213 39.8155 87.4443 39.4465C86.2868 39.0775 85.3746 38.6265 84.7075 38.0936L85.8846 35.7567C86.5517 36.2281 87.3756 36.6279 88.3565 36.9559C89.3375 37.2839 90.338 37.4479 91.3581 37.4479C92.6725 37.4479 93.6142 37.2532 94.1831 36.8636C94.7716 36.4741 95.0659 35.931 95.0659 35.234C95.0659 34.7214 94.8893 34.3217 94.5362 34.0348C94.1831 33.7478 93.7122 33.5326 93.1237 33.389C92.5548 33.2455 91.9172 33.1225 91.2109 33.0201C90.5047 32.8971 89.7984 32.7535 89.0922 32.5896C88.3859 32.4051 87.7385 32.1591 87.15 31.8516C86.5614 31.5236 86.0906 31.0829 85.7375 30.5294C85.3844 29.9554 85.2078 29.197 85.2078 28.254C85.2078 27.2701 85.4726 26.4091 86.0023 25.6711C86.532 24.9332 87.2776 24.3695 88.2388 23.9799C89.2198 23.57 90.3772 23.365 91.7112 23.365C92.7314 23.365 93.7613 23.4982 94.801 23.7647C95.8604 24.0107 96.7237 24.3695 97.3906 24.8409L96.1841 27.1778C95.4779 26.6858 94.7422 26.3476 93.9771 26.1631C93.212 25.9786 92.4469 25.8864 91.6818 25.8864C90.4458 25.8864 89.5238 26.1016 88.9156 26.5321C88.3075 26.942 88.0034 27.4751 88.0034 28.131C88.0034 28.6845 88.1799 29.115 88.5331 29.4225C88.9058 29.7094 89.3767 29.935 89.9456 30.0989C90.5341 30.2629 91.1815 30.4064 91.8878 30.5294C92.594 30.6319 93.3003 30.7754 94.0065 30.9599C94.7128 31.1238 95.3504 31.3596 95.9193 31.6671C96.5078 31.9746 96.9786 32.4051 97.3318 32.9586C97.7046 33.512 97.8909 34.25 97.8909 35.1725C97.8909 36.1564 97.6163 37.0072 97.0669 37.7246C96.5177 38.442 95.7427 39.0058 94.7422 39.4158C93.7417 39.8053 92.545 40 91.1521 40ZM106.777 40C105.208 40 103.991 39.5593 103.128 38.6778C102.265 37.7963 101.834 36.5356 101.834 34.8957V19.9519H104.659V34.7727C104.659 35.6542 104.865 36.3307 105.277 36.8021C105.708 37.2736 106.316 37.5094 107.101 37.5094C107.984 37.5094 108.719 37.2532 109.307 36.7406L110.19 38.8623C109.759 39.2518 109.239 39.5388 108.631 39.7233C108.043 39.9078 107.425 40 106.777 40ZM99.1851 25.9479V23.5187H109.131V25.9479H99.1851ZM123.288 39.8155V36.3717L123.141 35.7259V29.8529C123.141 28.6025 122.787 27.639 122.081 26.9626C121.395 26.2656 120.354 25.9171 118.962 25.9171C118.04 25.9171 117.137 26.0811 116.255 26.4091C115.372 26.7166 114.627 27.1368 114.018 27.6698L112.841 25.4559C113.645 24.7794 114.607 24.2669 115.725 23.9184C116.863 23.5495 118.05 23.365 119.286 23.365C121.424 23.365 123.072 23.9082 124.229 24.9947C125.386 26.0811 125.966 27.7415 125.966 29.9759V39.8155H123.288ZM118.167 40C117.01 40 115.99 39.795 115.107 39.385C114.244 38.9751 113.577 38.4113 113.106 37.6939C112.635 36.9559 112.4 36.1257 112.4 35.2032C112.4 34.3217 112.596 33.5222 112.988 32.8048C113.4 32.0874 114.057 31.5134 114.96 31.0829C115.881 30.6524 117.117 30.4372 118.668 30.4372H123.611V32.5588H118.785C117.373 32.5588 116.422 32.8048 115.931 33.2968C115.44 33.7888 115.195 34.3832 115.195 35.0802C115.195 35.8797 115.499 36.5254 116.107 37.0174C116.716 37.4888 117.559 37.7246 118.638 37.7246C119.698 37.7246 120.619 37.4786 121.404 36.9866C122.208 36.4947 122.787 35.7772 123.141 34.8342L123.7 36.8636C123.327 37.8271 122.67 38.5958 121.728 39.1698C120.786 39.7233 119.6 40 118.167 40ZM131.193 39.8155V23.5187H133.9V27.9465L133.635 26.8396C134.067 25.7121 134.794 24.8511 135.813 24.2567C136.834 23.6623 138.09 23.365 139.58 23.365V26.2246C139.462 26.2041 139.344 26.1938 139.227 26.1938C139.129 26.1938 139.031 26.1938 138.932 26.1938C137.422 26.1938 136.225 26.6653 135.342 27.6083C134.459 28.5513 134.018 29.9144 134.018 31.6979V39.8155H131.193Z" fill="#40464B"/>
                    </g>
                    <defs>
                    <clipPath id="clip0_24_2">
                    <rect width="139" height="60" fill="white"/>
                    </clipPath>
                    </defs>
                    </svg>
                </span>
            </div>
            <nav className={cl.nav}>
                <ul className={cl.listNav}>
                    {state.map((item)=>{
                        return (
                            <Link href={item.link}>
                                 <li className={item.active ? [cl.navItem, cl.itemActive].join` ` : cl.navItem} onClick={e=>handleFuncItem(e, item.id)}>
                                    <span className={cl.navIcon}>
                                        {item.img}
                                    </span>
                                    <span className={cl.navText}>
                                        {item.nameItem}
                                    </span>
                                </li>
                            </Link>
                        )
                    })}
                </ul>
            </nav>
        </div>
        <div className={cl.content}>
            <Header isHiddenSidebar={isHiddenSidebar}/>
            {children}
        </div>
    </div>
  )
}

